import{S as J,i as N,s as O,W as P,h as Q,d as R,t as W,a as j,I as z,l as D,n as e,m as G,u as t,v as c,A as i,c as K,w as U}from"./index-b0VjaSRV.js";function V(f){let n,o,u,d,k,r,p,w,g,y,a,F,_,S,b,E,C,s,$,L,q,H,I,M,m,T,v,A,x;return a=new P({props:{content:"?fields=*,"+f[0]+"expand.relField.name"}}),{c(){n=t("tr"),o=t("td"),o.textContent="fields",u=c(),d=t("td"),d.innerHTML='<span class="label">String</span>',k=c(),r=t("td"),p=t("p"),w=i(`Comma separated string of the fields to return in the JSON response\r
            `),g=t("em"),g.textContent="(by default returns all fields)",y=i(`. Ex.:\r
            `),K(a.$$.fragment),F=c(),_=t("p"),_.innerHTML="<code>*</code> targets all keys from the specific depth level.",S=c(),b=t("p"),b.textContent="In addition, the following field modifiers are also supported:",E=c(),C=t("ul"),s=t("li"),$=t("code"),$.textContent=":excerpt(maxLength, withEllipsis?)",L=c(),q=t("br"),H=i(`\r
                Returns a short plain text version of the field string value.\r
                `),I=t("br"),M=i(`\r
                Ex.:\r
                `),m=t("code"),T=i("?fields=*,"),v=i(f[0]),A=i("description:excerpt(200,true)"),U(o,"id","query-page")},m(l,h){D(l,n,h),e(n,o),e(n,u),e(n,d),e(n,k),e(n,r),e(r,p),e(p,w),e(p,g),e(p,y),G(a,p,null),e(r,F),e(r,_),e(r,S),e(r,b),e(r,E),e(r,C),e(C,s),e(s,$),e(s,L),e(s,q),e(s,H),e(s,I),e(s,M),e(s,m),e(m,T),e(m,v),e(m,A),x=!0},p(l,[h]){const B={};h&1&&(B.content="?fields=*,"+l[0]+"expand.relField.name"),a.$set(B),(!x||h&1)&&z(v,l[0])},i(l){x||(j(a.$$.fragment,l),x=!0)},o(l){W(a.$$.fragment,l),x=!1},d(l){l&&Q(n),R(a)}}}function X(f,n,o){let{prefix:u=""}=n;return f.$$set=d=>{"prefix"in d&&o(0,u=d.prefix)},[u]}class Z extends J{constructor(n){super(),N(this,n,X,V,O,{prefix:0})}}export{Z as F};
